/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ETHStakeBridge,
  ETHStakeBridgeInterface,
} from "../ETHStakeBridge";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061072d806100206000396000f3fe6080604052600436106100385760003560e01c806327e235e31461007d578063db2e21bc146100ba578063dceb986d146100d157610078565b36610078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006f90610400565b60405180910390fd5b600080fd5b34801561008957600080fd5b506100a4600480360381019061009f9190610483565b6100db565b6040516100b191906104c9565b60405180910390f35b3480156100c657600080fd5b506100cf6100f3565b005b6100d96102bb565b005b60006020528060005260406000206000915090505481565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017090610530565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516101e390610581565b60006040518083038185875af1925050503d8060008114610220576040519150601f19603f3d011682016040523d82523d6000602084013e610225565b606091505b5050905080610269576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610260906105e2565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040516102af91906104c9565b60405180910390a25050565b600034116102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f590610674565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461034c91906106c3565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d3460405161039991906104c9565b60405180910390a2565b600082825260208201905092915050565b7f557365207374616b654554482829000000000000000000000000000000000000600082015250565b60006103ea600e836103a3565b91506103f5826103b4565b602082019050919050565b60006020820190508181036000830152610419816103dd565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061045082610425565b9050919050565b61046081610445565b811461046b57600080fd5b50565b60008135905061047d81610457565b92915050565b60006020828403121561049957610498610420565b5b60006104a78482850161046e565b91505092915050565b6000819050919050565b6104c3816104b0565b82525050565b60006020820190506104de60008301846104ba565b92915050565b7f4e6f2062616c616e636520746f20776974686472617700000000000000000000600082015250565b600061051a6016836103a3565b9150610525826104e4565b602082019050919050565b600060208201905081810360008301526105498161050d565b9050919050565b600081905092915050565b50565b600061056b600083610550565b91506105768261055b565b600082019050919050565b600061058c8261055e565b9150819050919050565b7f5769746864726177206661696c65640000000000000000000000000000000000600082015250565b60006105cc600f836103a3565b91506105d782610596565b602082019050919050565b600060208201905081810360008301526105fb816105bf565b9050919050565b7f5374616b6520616d6f756e74206d75737420626520677265617465722074686160008201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b600061065e6023836103a3565b915061066982610602565b604082019050919050565b6000602082019050818103600083015261068d81610651565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106ce826104b0565b91506106d9836104b0565b92508282019050808211156106f1576106f0610694565b5b9291505056fea26469706673582212200400c4dbca108639cbd53b2ec87899c0351283479c92d6f088dfe5c4cdfe114e64736f6c63430008140033";

type ETHStakeBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHStakeBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHStakeBridge__factory extends ContractFactory {
  constructor(...args: ETHStakeBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ETHStakeBridge & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ETHStakeBridge__factory {
    return super.connect(runner) as ETHStakeBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHStakeBridgeInterface {
    return new Interface(_abi) as ETHStakeBridgeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ETHStakeBridge {
    return new Contract(address, _abi, runner) as unknown as ETHStakeBridge;
  }
}
